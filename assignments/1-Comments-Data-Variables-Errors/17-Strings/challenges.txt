[ All assignment code should be written inside of the 'main.py' file.        ]
[ In VS Code use CTRL + J to open the terminal.                              ]
[ In the terminal type 'python main.py' to execute your code.                ]
[ In the terminal type 'python test.py' to test your code for correctness.   ]

[ Strings : Challenges                                               ]

"A Constraint is a rule that tells you what you can or cannot do when solving a problem."

[1.]    Print out the text "ONE TWO THREE" with a newline character between each word instead of a space.
        Constraints:
            You must use a single print statement.
            You must use a single string.
            Spaces should be manually replaced by newline characters.

[2.]    Print out the file path --> "C:\Users\USERNAME\Desktop"
        Hint: Special Characters
        Constraints:
            You must use a single print statement
            You must use a single string


[3.]    Print out --> "Where there's code. There's a bug."
        Hint: Special Characters
        Constraints:
            Include the quotation marks in the output.
            You must use a single print statement. 
            You must use a single string.



Pick any character and assign it to a variable named ‘character’.

[4.]    Using a built-in function convert 'character' into its integer value
        Assign the result to a variable named 'int_value'.
        Print out the value of 'int_value'.
        Constraints:
            You must use only a single statement (one line) to convert 'character' and assign it to 'int_value'
            'character' must be converted using a  built-in function


[5.]    Using built-in functions convert 'int_value' from question 4 into binary.
        Assign the binary value to a variable named 'bin_value'.
        Print out the value of 'bin_value'.
        Constraints:
            You must use only a single statement (one line) to convert 'int_value' and assign it to 'bin_value'
            'int_value' must be converted using a built-in function


[6.]    Using built-in functions convert 'int_value' from question 4 into hexadecimal.
        Assign the binary value to a variable named 'hex_value'.
        Print out the value of 'hex_value'.
        Constraints:
            You must use only a single statement (one line) to convert 'int_value' and assign it to 'hex_value'
            'int_value' must be converted using a built-in function

[7.]    Using built-in functions convert 'int_value' from question 4 into a character.
        Assign the character value to a variable named 'char_value'.
        Print out the value of 'char_value'.
        Constraints:
            You must use only a single statement (one line) to convert 'int_value' and assign it to 'char_value'
            'int_value' must be converted using a built-in function

Define 3 variables named, 'first', 'second', and 'third'. 
Assign each of these 3 variables a string literal of your choice.

[8.]    Write a code statement that concatenates 'first' and 'second' with a single space in between.
        Print out the result.
        Constraints:
            You must use a single print statement
            You must use concatentation in your answer
            The space must be added and cannot already exist in 'first' or 'second'

[9.]    Duplicate 'third' 10 times, and print the result.
        Constraints:
            You must use a single print statement
            You must use duplication in your answer.

[10.]   Create a variable named 'text' and assign it a string literal of your choice. 
        Concatenate "abcde" and  the value of 'text' then assign 'text' to this new value. 
        Hint: Compound Concatenation and assignment
        Constraints:
                You must use the variable 'text'
                You may only use the variable 'text' once when concatenating and assigning.
                You must concatenate and assign in the same statement

[11.]   Create a variable named 'strang' and assign it a string literal of your choice.
        Duplicate 'strang' 5 times and assign 'strang' to the new value.
        Hint: Compound Duplication and assignment
        Constraints:
            You must use the variable 'strang'
            You may only use the variable 'strang' once when duplicating and assigning.
            You must duplicate and assign in the same statement.


[12.]   Write an expression to check if "hello" and "Hello" are equal.
        Print the result of the expression. 
        Constraints:
            You must use only one print statement.
            You must write the expression inside of the print statement.


Create 3 variables named: 'alpha', 'beta', and 'gamma'.
Assign each of these 3 variables a string literal of your choice.


[13.]   Write an expression to check if 'alpha' and 'beta' are NOT equal.
        Print the result of the expression.
        Constraints:
            You must use only one print statement.
            You must write the expression inside of the print statement.


[14.]   Write an expression to check if 'beta' is lexicographically greater than 'gamma'.
        Print the result of the expression.
        Constraints:
            You must use only one print statement.
            You must write the expression inside of the print statement.


[15.]   Write an expression to check if 'beta' is lexicographically less than 'gamma'.
        Print the result of the expression.
        Constraints:
            You must use only one print statement.
            You must write the expression inside of the print statement.



Define a variable named 'alphabet' and assign it the value "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

[16.]   Print out the 4th character in 'alphabet' using subscripting. 
        Constraints:
            You must use the variable 'alphabet'
            You must use subscripting to access the 4th character
            You must use a single print statement

[17.]   Print the 3rd to last character in 'alphabet' using subscripting and a negative index.
        Constraints:
            You must use the variable 'alphabet'
            You must use subscripting.
            You must use a negative index.
            You must use a single print statement. 

[18.]   Print a substring of 'alphabet' that contains the first 7 characters.
        Constraints:
            You must use the variable 'alphabet'
            You must use slicing notation
            You must use positive indexes
            You must use default values if applicable
            You must use a single print statement

[19.]   Print a substring of 'alphabet' that contains the last 8 characters.
        Constraints:
            You must use the variable 'alphabet'
            You must use slicing notation
            You must use negative indexes
            You must use default values if applicable
            You must use a single print statement


[20.]   Print a substring of 'alphabet' that contains only characters 11 through 17 inclusive.
        Constraints:
            You must use the variable 'alphabet'
            You must use slicing notation
            You must use positive indexes
            You must use default values if applicable
            You must use a single print statement


[21.]   Write a Python code statement that prints out the number of characters in 'alphabet'.
        Constraints:
            You must use the variable 'alphabet'
            You must use the built-in function to determine the number of characters
            


[22.]   Write a Python code statement that prints out the last positive index of 'alphabet'.
        Constraints:
            You must use the variable 'alphabet'
            You must use the built-in function to determine the number of characters
            The last index must be calculated from the number of characters
